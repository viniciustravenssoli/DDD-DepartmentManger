// <auto-generated />
using System;
using Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT")
                        .HasColumnName("departmentName");

                    b.Property<int>("EmployeeLimit")
                        .HasMaxLength(5)
                        .HasColumnType("INTEGER")
                        .HasColumnName("employeeLimit");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT")
                        .HasColumnName("Cpf");

                    b.Property<DateTime>("DataDeEntrada")
                        .HasColumnType("TEXT")
                        .HasColumnName("DataDeEntrada");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT")
                        .HasColumnName("Nome");

                    b.Property<double>("Salario")
                        .HasMaxLength(20)
                        .HasColumnType("REAL")
                        .HasColumnName("Salario");

                    b.Property<double>("SalarioAnual")
                        .HasMaxLength(30)
                        .HasColumnType("REAL")
                        .HasColumnName("SalarioAnual");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Payroll", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ImpostoFgts")
                        .HasMaxLength(10)
                        .HasColumnType("REAL")
                        .HasColumnName("ImpostoFgts");

                    b.Property<double>("ImpostoInss")
                        .HasMaxLength(10)
                        .HasColumnType("REAL")
                        .HasColumnName("ImpostoInss");

                    b.Property<double>("ImpostoIrrf")
                        .HasMaxLength(10)
                        .HasColumnType("REAL")
                        .HasColumnName("ImpostoIrrf");

                    b.Property<int>("Mes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasMaxLength(2)
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidadeDeHoras");

                    b.Property<double>("SalarioBruto")
                        .HasMaxLength(15)
                        .HasColumnType("REAL")
                        .HasColumnName("salarioBruto");

                    b.Property<double>("SalarioLiquido")
                        .HasMaxLength(15)
                        .HasColumnType("REAL")
                        .HasColumnName("salarioLiquido");

                    b.Property<double>("Valor")
                        .HasMaxLength(9)
                        .HasColumnType("REAL")
                        .HasColumnName("valorHora");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Payrolls", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.Payroll", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
